
library(gadget3)
library(gadgetutils)

actions <- list()
data_path <- ""


# Create area definitions ####################
area_names <- structure(1:2, names = c("IV4", "IV5"))


# Create time definitions ####################

actions_time <- list(
  g3a_time(
    1999L, 2004L,
    step_lengths = c(3L, 3L, 3L, 3L)),
  NULL)

actions <- c(actions, actions_time)


# Create stock definition for ling ####################
ling <- g3_stock("ling", seq(30, 50, 10)) |>
  g3s_livesonareas(area_names[c("IV4", "IV5")]) |>
  g3s_age(3L, 5L)

actions_ling <- list(
  g3a_growmature(ling, g3a_grow_impl_bbinom(
    maxlengthgroupgrowth = 2L)),
  g3a_naturalmortality(ling),
  g3a_initialconditions_normalcv(ling),
  g3a_renewal_normalparam(ling,
    run_step = NULL),
  g3a_age(ling),
  NULL)

actions_likelihood_ling <- list(
  g3l_understocking(list(ling), weight = 1e+08, nll_breakdown = TRUE),
  NULL)

actions <- c(actions, actions_ling, actions_likelihood_ling)


# Create fleet definition for comm ####################
comm <- g3_fleet("comm") |> g3s_livesonareas(area_names[c("IV4", "IV5")])


actions_comm <- list(
  g3a_predate_fleet(
    comm,
    list(ling),
    suitabilities = g3_suitability_exponentiall50(),
    catchability_f = g3a_predate_catchability_numberfleet(
      g3_timeareadata("landings_comm", landings_comm, "weight", areas = area_names))),
  NULL)
actions_likelihood_comm <- list(
  g3l_catchdistribution(
    "ldist_comm",
    ldist_comm,
    fleets = list(comm),
    stocks = list(ling),
    function_f = g3l_distribution_sumofsquares(),
    area_group = area_names,
    report = TRUE,
    nll_breakdown = TRUE),
  NULL)

actions <- c(actions, actions_comm, actions_likelihood_comm)


# Create fleet definition for surv ####################
surv <- g3_fleet("surv") |> g3s_livesonareas(area_names[c("IV4", "IV5")])


actions_surv <- list(
  g3a_predate_fleet(
    surv,
    list(ling),
    suitabilities = g3_suitability_exponentiall50(),
    catchability_f = g3a_predate_catchability_numberfleet(
      g3_timeareadata("landings_surv", landings_surv, "weight", areas = area_names))),
  NULL)
actions_likelihood_surv <- list(
  g3l_catchdistribution(
    "aldist_surv",
    aldist_surv,
    fleets = list(surv),
    stocks = list(ling),
    function_f = g3l_distribution_sumofsquares(),
    area_group = area_names,
    report = TRUE,
    nll_breakdown = TRUE),
  NULL)

actions <- c(actions, actions_surv, actions_likelihood_surv)


# Create abundance index for acoustic ####################

actions_acoustic <- list(
  NULL)
actions_likelihood_acoustic <- list(

  g3l_abundancedistribution(
    "dist_acoustic",
    dist_acoustic,
    
    stocks = list(ling),
    function_f = g3l_distribution_surveyindices_log(alpha = NULL, beta = 1),
    area_group = area_names,
    report = TRUE,
    nll_breakdown = TRUE),
  NULL)

actions <- c(actions, actions_acoustic, actions_likelihood_acoustic)


# Create model objective function ####################

# Turn model into C++ code
model_code <- g3_to_tmb(c(actions, list(
    # Include detailed reporting for all actions
    g3a_report_detail(actions),
    # Add lower/upper bounds from parameters to output likelihood
    g3l_bounds_penalty(actions) )))

# Guess l50 / linf based on stock sizes
estimate_l50 <- gadget3::g3_stock_def(ling, "midlen")[[length(gadget3::g3_stock_def(ling, "midlen")) / 2]]
estimate_linf <- max(gadget3::g3_stock_def(ling, "midlen"))
estimate_t0 <- gadget3::g3_stock_def(ling, "minage") - 0.8

attr(model_code, "parameter_template") |>
  # fish.init.scalar & fish.rec.scalar: Overall scalar for recruitment/initial conditions, see g3a_renewal_normalparam()
  g3_init_val("*.rec|init.scalar", 10, lower = 0.001, upper = 200) |>
  # fish.rec.(age): Per-age recriutment scalar, see g3a_renewal_normalparam()
  g3_init_val("*.init.#", 10, lower = 0.001, upper = 200) |>
  # fish.rec.(year): Recruitment level year-on-year, see g3a_renewal_normalparam()
  g3_init_val("*.rec.#", 100, lower = 1e-6, upper = 1000) |>
  # fish.rec.sd: Standard deviation for recruitment, see g3a_renewal_normalparam()
  g3_init_val("*.rec.sd", 5, lower = 4, upper = 20) |>
  # init.F: Offset for initial M, see g3a_renewal_initabund()
  g3_init_val("init.F", 0.5, lower = 0.1, upper = 1) |>

  # fish.M.(age): per-age M for our species, see g3a_naturalmortality()
  g3_init_val("*.M.#", 0.15, lower = 0.001, upper = 1) |>

  # fish.Linf, fish.K, fish.t0: VonB parameters for our species, see g3a_renewal_vonb_t0(), g3a_grow_lengthvbsimple()
  g3_init_val("*.Linf", estimate_linf, spread = 0.2) |>
  g3_init_val("*.K", 0.3, lower = 0.04, upper = 1.2) |>
  g3_init_val("*.t0", estimate_t0, spread = 2) |>

  # fish.walpha, fish.wbeta: Age/weight relationship for initialconditions, renewal, see g3a_renewal_normalparam()
  g3_init_val("*.walpha", 0.01, optimise = FALSE) |>
  g3_init_val("*.wbeta", 3, optimise = FALSE) |>

  # fish.f_surv.alpha, fish.f_surv.l50: Curve/l50 for fishing suitability, see g3_suitability_exponentiall50()
  g3_init_val("*.*.alpha", 0.07, lower = 0.01, upper = 0.2) |>
  g3_init_val("*.*.l50", estimate_l50, spread = 0.25) |>

  # fish.bbin: Beta for beta-binomial distribution for fish growth, see g3a_grow_impl_bbinom()
  g3_init_val("*.bbin", 100, lower = 1e-05, upper = 1000) |>

  # identity() is a do-nothing function, but it lets us finish on a new line
  identity() -> params.in



