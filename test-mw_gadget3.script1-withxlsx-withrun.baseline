
library(gadget3)
library(readxl)
library(gadgetutils)
library(gadgetplots)

actions <- list()
data_path <- "moo.xlsx"


# Create area definitions ####################
area_names <- structure(1:2, names = c("IV4", "IV5"))


# Create time definitions ####################

actions_time <- list(
  g3a_time(
    1999L, 2004L,
    step_lengths = c(3L, 3L, 3L, 3L)),
  NULL)

actions <- c(actions, actions_time)


# Create stock definition for ling ####################
ling <- g3_stock("ling", seq(30, 50, 10)) |>
  g3s_livesonareas(area_names[c("IV4", "IV5")]) |>
  g3s_age(3L, 5L)

actions_ling <- list(
  g3a_growmature(ling, g3a_grow_impl_bbinom(
    maxlengthgroupgrowth = 2L)),
  g3a_naturalmortality(ling),
  g3a_initialconditions_normalcv(ling),
  g3a_renewal_normalparam(ling,
    run_step = 1),
  g3a_age(ling),
  NULL)

actions_likelihood_ling <- list(
  g3l_understocking(list(ling), weight = 1e+08, nll_breakdown = TRUE),
  NULL)

actions <- c(actions, actions_ling, actions_likelihood_ling)


# Create fleet definition for comm ####################
comm <- g3_fleet("comm") |> g3s_livesonareas(area_names[c("IV4", "IV5")])

landings_comm <- read_excel(data_path, "landings_comm", na = c("", "NA"))
ldist_comm <- read_excel(data_path, "ldist_comm", na = c("", "NA"))

actions_comm <- list(
  g3a_predate_fleet(
    comm,
    list(ling),
    suitabilities = g3_suitability_exponentiall50(),
    catchability_f = g3a_predate_catchability_numberfleet(
      g3_timeareadata("landings_comm", landings_comm, "weight", areas = area_names))),
  NULL)
actions_likelihood_comm <- list(
  g3l_catchdistribution(
    "ldist_comm",
    ldist_comm,
    fleets = list(comm),
    stocks = list(ling),
    function_f = g3l_distribution_sumofsquares(),
    area_group = area_names,
    report = TRUE,
    nll_breakdown = TRUE),
  NULL)

actions <- c(actions, actions_comm, actions_likelihood_comm)


# Create fleet definition for surv ####################
surv <- g3_fleet("surv") |> g3s_livesonareas(area_names[c("IV4", "IV5")])

landings_surv <- read_excel(data_path, "landings_surv", na = c("", "NA"))
aldist_surv <- read_excel(data_path, "aldist_surv", na = c("", "NA"))

actions_surv <- list(
  g3a_predate_fleet(
    surv,
    list(ling),
    suitabilities = g3_suitability_exponentiall50(),
    catchability_f = g3a_predate_catchability_numberfleet(
      g3_timeareadata("landings_surv", landings_surv, "weight", areas = area_names))),
  NULL)
actions_likelihood_surv <- list(
  g3l_catchdistribution(
    "aldist_surv",
    aldist_surv,
    fleets = list(surv),
    stocks = list(ling),
    function_f = g3l_distribution_sumofsquares(),
    area_group = area_names,
    report = TRUE,
    nll_breakdown = TRUE),
  NULL)

actions <- c(actions, actions_surv, actions_likelihood_surv)


# Create abundance index for acoustic ####################
dist_acoustic <- read_excel(data_path, "dist_acoustic", na = c("", "NA"))

actions_acoustic <- list(
  NULL)
actions_likelihood_acoustic <- list(

  g3l_abundancedistribution(
    "dist_acoustic",
    dist_acoustic,
    
    stocks = list(ling),
    function_f = g3l_distribution_surveyindices_log(alpha = NULL, beta = 1),
    area_group = area_names,
    report = TRUE,
    nll_breakdown = TRUE),
  NULL)

actions <- c(actions, actions_acoustic, actions_likelihood_acoustic)


# Create model objective function ####################

model_code <- g3_to_tmb(actions)

# Guess l50 / linf based on stock sizes
estimate_l50 <- gadget3::g3_stock_def(ling, "midlen")[[length(gadget3::g3_stock_def(ling, "midlen")) / 2]]
estimate_linf <- max(gadget3::g3_stock_def(ling, "midlen"))

params.in <- attr(model_code, "parameter_template") |>
  gadgetutils::g3_init_guess("\\.(rec|init)\\.scalar$", 10, 0.001, 200, 1) |>
  gadgetutils::g3_init_guess("\\.init\\.[0-9]+$", 10, 0.001, 200, 1) |>
  gadgetutils::g3_init_guess("\\.rec\\.[0-9]+$", 100, 1e-6, 1000, 1) |>
  gadgetutils::g3_init_guess("\\.rec.sd$", 5, 4, 20, 1) |>
  gadgetutils::g3_init_guess("\\.M$", 0.15, 0.001, 1, 1) |>
  gadgetutils::g3_init_guess("^init\\.F$", 0.5, 0.1, 1, 1) |>
  gadgetutils::g3_init_guess("\\.Linf$", estimate_linf, estimate_linf * (1 - 0.2), estimate_linf * (1 + 0.2), 1) |>
  gadgetutils::g3_init_guess("\\.K$", 0.3, 0.04, 1.2, 1) |>
  gadgetutils::g3_init_guess("\\.t0$", 2, -1, 5, 1) |>
  gadgetutils::g3_init_guess("\\.walpha$", 0.01) |>
  gadgetutils::g3_init_guess("\\.wbeta$", 3) |>
  gadgetutils::g3_init_guess("^\\w+\\.\\w+\\.alpha$", 0.07, 0.01, 0.2, 1) |>
  gadgetutils::g3_init_guess("^\\w+\\.\\w+\\.l50$", estimate_l50, estimate_l50 * (1 - 0.25), estimate_l50 * (1 + 0.25), 1) |>
  gadgetutils::g3_init_guess("\\.bbin$", 100, 1e-05, 1000, 1) |>
  identity()

# Add bounds penalty for upper/lower bounds
actions <- c(actions, list(g3l_bounds_penalty(params.in)))
model_code <- g3_to_tmb(actions)


# Examples for running model ####################
obj.fn <- gadget3::g3_tmb_adfun(model_code, params.in)

params.out <- gadgetutils::g3_iterative(getwd(),
    wgts = "WGTS",
    model = model_code,
    params.in = params.in,
    grouping = list(
        fleet = c("ldist_comm", "aldist_surv"),
        abund = "dist_acoustic"),
    method = "BFGS",
    control = list(maxit = 100, reltol = 1e-10),
    use_parscale = TRUE,
    shortcut = FALSE,
    cv_floor = 0.05,
    resume_final = FALSE)

fit <- gadgetutils::g3_fit(model_code, params.out)
gadgetplots::plot_annual(fit)
gadgetplots::plot_biomass(fit, total = TRUE)
gadgetplots::plot_ldist(fit)
# gadgetplots::gadget_plots(fit, "figs", file_type = "html")


